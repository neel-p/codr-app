plugins {
    id 'java'
}

group 'aws.codr'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile('com.amazonaws:aws-java-sdk-kinesis:1.11.728') {
        compile (
                'com.amazonaws:aws-lambda-java-core:1.2.0',
                'com.amazonaws.serverless:aws-serverless-java-container-jersey:[1.0,)',
                'com.fasterxml.jackson.core:jackson-databind:2.10.1',
                'com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:2.10.1',
                'com.fasterxml.jackson.module:jackson-module-jaxb-annotations:2.10.1',
                'io.symphonia:lambda-logging:1.0.1',
                'javax.validation:validation-api:2.0.0.Final',
                'org.hibernate.validator:hibernate-validator:6.1.2.Final',
                'org.hibernate.validator:hibernate-validator-annotation-processor:6.1.2.Final',
                'mysql:mysql-connector-java:8.0.19',
                'org.jdbi:jdbi3-core:3.12.2',
                'javax.el:javax.el-api:3.0.0',
                'org.glassfish.web:javax.el:2.2.6',
                'com.amazonaws:aws-java-sdk-rds:1.11.743',
                'com.amazonaws:aws-java-sdk-dynamodb:1.11.748',
                'com.amazonaws:aws-java-sdk-cognitoidp:1.11.759'
        )
        exclude group: 'com.fasterxml.jackson.dataformat', module: 'jackson-dataformat-cbor'
    }

    compile("org.glassfish.jersey.media:jersey-media-json-jackson:2.10.1") {
        exclude group: 'com.fasterxml.jackson.core', module: "jackson-annotations"
        exclude group: 'com.fasterxml.jackson.core', module: "jackson-databind"
        exclude group: 'com.fasterxml.jackson.core', module: "jackson-core"
        exclude group: 'com.fasterxml.jackson.module', module: "jackson-module-jaxb-annotations"
    }

    compile("org.glassfish.jersey.inject:jersey-hk2:2.29.1") {
        exclude group: 'javax.inject', module: "javax.inject"
    }

    testCompile("junit:junit:4.12")
}

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.compileClasspath
    }
}

build.dependsOn buildZip
